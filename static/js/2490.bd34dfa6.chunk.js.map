{"version":3,"file":"static/js/2490.bd34dfa6.chunk.js","mappings":"0QAyBMA,GAAOC,EAAAA,EAAAA,KAAS,kBAAM,iEAAN,IAChBC,GAAOD,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IAChBE,GAASF,EAAAA,EAAAA,KAAS,kBAAM,qFAAN,IAGlBG,GAAkBH,EAAAA,EAAAA,KAAS,kBAC/B,8BAD+B,IAG3BI,GAAgBJ,EAAAA,EAAAA,KAAS,kBAAM,uDAAN,IACzBK,GAAUL,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IAEnBM,EAAO,WACX,IAAQC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAEFE,EAAQ,CAACC,EAAAA,IAAUC,EAAAA,IAAaC,EAAAA,IAAWC,EAAAA,KAE3CC,GAAmBC,EAAAA,EAAAA,cAAY,WAAO,IAAD,GACzCC,EAAAA,EAAAA,UAAQ,UAACC,SAASC,eAAe,oBAAzB,aAAC,EAAsCC,UAChD,GAAE,IAEH,OACE,SAAC,EAAAC,SAAD,WACE,UAACf,EAAD,CAASgB,GAAG,OAAZ,WACE,SAACjB,EAAD,KACA,iBAAKkB,UAAU,iBAAf,WACE,SAACnB,EAAD,WACE,SAACF,EAAD,CAAMsB,IAAE,EAACC,IAAK,CAAEC,UAAW,UAA3B,SACGlB,EAAcmB,MAAMpB,KAAKqB,WAG9B,SAACxB,EAAD,CAAiByB,MAAM,OAAvB,UACE,SAAC3B,EAAD,UAAOM,EAAcmB,MAAMpB,KAAKL,UAElC,SAACE,EAAD,CAAiByB,MAAM,OAAvB,UACE,SAAC7B,EAAD,CAAM8B,KAAK,YAAYP,UAAU,MAAjC,UACE,SAACpB,EAAD,CACEmB,GAAG,cACH,aAAYd,EAAcmB,MAAMI,WAAWC,WAC3CC,QAASlB,EACTU,IAAK,CACHS,aAAc,OACdC,UAAW,OACXC,SAAU,iBACVC,MAAO,QARX,UAWE,SAAC,IAAD,CAAiBC,KAAMC,EAAAA,aAI7B,SAACnC,EAAD,CAAiByB,MAAM,OAAvB,UACE,SAAC3B,EAAD,CACEuB,IAAK,CACHC,UAAW,SACXc,aAAc,OACdL,UAAW,QAJf,SAOG3B,EAAcmB,MAAMpB,KAAKkC,UAG9B,gBAAKlB,UAAU,cAAf,SACGf,EAAcmB,MAAMpB,KAAKmC,OAAOC,KAAI,SAACC,EAAMC,GAAP,OACnC,SAACzC,EAAD,CAAiCyB,MAAK,WAAKiB,EAAAA,EAAAA,GAAWD,EAAG,IAAnB,KAAtC,UACE,SAAC7C,EAAD,CACE8B,KAAMc,EAAK5C,KACX+C,IAAI,aACJC,OAAO,SACP,uBAAexC,EAAcmB,MAAMI,WAAWkB,OAA9C,YAAwDL,EAAK1C,MAC7DgD,KAAMN,EAAK1C,KAAKiD,cALlB,UAOE,SAAC,IAAD,CAAiBb,KAAM5B,EAAMmC,QARXD,EAAK1C,KADQ,aAkBhD,EAID,GAFiBkD,EAAAA,EAAAA,OAAK,SAACC,GAAD,OAAW,SAAC9C,GAAD,UAAU8C,GAArB,G,8ECrGf,IAAMpC,EAAW,WAAiB,IAAhB+B,EAAe,uDAAN,EAC5BM,EAAc,EAClB,GAAsB,kBAAXN,EAAqB,CAC9B,IAAMO,EAAUrC,SAASC,eAAe6B,GACxB,OAAZO,IAAkBD,EAAcC,EAAQnC,UAAY,IACzD,CACDoC,OAAOC,OAAO,CACZC,IAAKJ,EAAc,IAAMA,EAAcN,EACvCW,KAAM,EACNC,SAAU,UAEb,EAQYd,EAAa,SAACD,EAAGhB,GAE5B,IADA,IAAIgC,EAAWhC,EACNiC,EAAI,EAAGA,EAAIjB,EAAGiB,GAAK,EAAGD,GAAY,GAC3C,OAAOA,CACR,C","sources":["layouts/Hero/Hero.jsx","utils/functions.js"],"sourcesContent":["import React, { Suspense, useCallback, memo } from \"react\";\r\nimport loadable from \"@loadable/component\";\r\n\r\n// @fortawesome\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faInstagram,\r\n  faTwitter,\r\n  faGithub,\r\n  faLinkedin,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { scrollTo } from \"some-javascript-utils/browser\";\r\n\r\n// contexts\r\nimport { useLanguage } from \"../../contexts/LanguageProvider\";\r\n\r\n// utils\r\nimport { parseDelay } from \"../../utils/functions\";\r\n\r\n// styles\r\nimport \"./styles.css\";\r\n\r\n// @nextui-org\r\nconst Link = loadable(() => import(\"../../components/NextUI/Link\"));\r\nconst Text = loadable(() => import(\"../../components/NextUI/Text\"));\r\nconst Button = loadable(() => import(\"../../components/NextUI/Button\"));\r\n\r\n// own components\r\nconst InViewComponent = loadable(() =>\r\n  import(\"../../components/InViewComponent/InViewComponent\")\r\n);\r\nconst FloatingIcons = loadable(() => import(\"./components/FloatingIcons\"));\r\nconst Section = loadable(() => import(\"../../components/Section/Section\"));\r\n\r\nconst Hero = () => {\r\n  const { languageState } = useLanguage();\r\n\r\n  const icons = [faGithub, faInstagram, faTwitter, faLinkedin];\r\n\r\n  const scrollToProjects = useCallback(() => {\r\n    scrollTo(document.getElementById(\"#projects\")?.offsetTop);\r\n  }, []);\r\n\r\n  return (\r\n    <Suspense>\r\n      <Section id=\"hero\">\r\n        <FloatingIcons />\r\n        <div className=\"main-container\">\r\n          <InViewComponent>\r\n            <Text h1 css={{ textAlign: \"center\" }}>\r\n              {languageState.texts.Hero.Title}\r\n            </Text>\r\n          </InViewComponent>\r\n          <InViewComponent delay=\"0.4s\">\r\n            <Text>{languageState.texts.Hero.Text}</Text>\r\n          </InViewComponent>\r\n          <InViewComponent delay=\"0.5s\">\r\n            <Link href=\"#projects\" className=\"cta\">\r\n              <Button\r\n                id=\"to-projects\"\r\n                aria-label={languageState.texts.AriaLabels.toProjects}\r\n                onClick={scrollToProjects}\r\n                css={{\r\n                  borderRadius: \"100%\",\r\n                  marginTop: \"15px\",\r\n                  minWidth: \"0px !important\",\r\n                  width: \"40px\",\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faArrowDown} />\r\n              </Button>\r\n            </Link>\r\n          </InViewComponent>\r\n          <InViewComponent delay=\"0.6s\">\r\n            <Text\r\n              css={{\r\n                textAlign: \"center\",\r\n                marginBottom: \"10px\",\r\n                marginTop: \"50px\",\r\n              }}\r\n            >\r\n              {languageState.texts.Hero.Meet}\r\n            </Text>\r\n          </InViewComponent>\r\n          <div className=\"hero-social\">\r\n            {languageState.texts.Hero.Social.map((item, i) => (\r\n              <InViewComponent key={item.Text} delay={`${parseDelay(i, 0.6)}s`}>\r\n                <Link\r\n                  href={item.Link}\r\n                  rel=\"noreferrer\"\r\n                  target=\"_blank\"\r\n                  aria-label={`${languageState.texts.AriaLabels.linkTo} ${item.Text}`}\r\n                  name={item.Text.toLowerCase()}\r\n                >\r\n                  <FontAwesomeIcon icon={icons[i]} />\r\n                </Link>\r\n              </InViewComponent>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Section>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst HeroMemo = memo((props) => <Hero {...props} />);\r\n\r\nexport default HeroMemo;\r\n","// @ts-check\n\n/**\n * Scroll to a target position, default the top of the page.\n * @param {number} [target=0] - The target position to scroll to. If a string is passed it looks for respective element with target id\n */\nexport const scrollTo = (target = 0) => {\n  let localTarget = 0;\n  if (typeof target === \"string\") {\n    const element = document.getElementById(target);\n    if (element !== null) localTarget = element.offsetTop - 100;\n  }\n  window.scroll({\n    top: localTarget > 100 ? localTarget : target,\n    left: 0,\n    behavior: \"smooth\",\n  });\n};\n\n/**\n *\n * @param {number} i\n * @param {number} delay\n * @returns\n */\nexport const parseDelay = (i, delay) => {\n  let newDelay = delay;\n  for (let j = 0; j < i; j += 1) newDelay += 0.1;\n  return newDelay;\n};\n"],"names":["Link","loadable","Text","Button","InViewComponent","FloatingIcons","Section","Hero","languageState","useLanguage","icons","faGithub","faInstagram","faTwitter","faLinkedin","scrollToProjects","useCallback","scrollTo","document","getElementById","offsetTop","Suspense","id","className","h1","css","textAlign","texts","Title","delay","href","AriaLabels","toProjects","onClick","borderRadius","marginTop","minWidth","width","icon","faArrowDown","marginBottom","Meet","Social","map","item","i","parseDelay","rel","target","linkTo","name","toLowerCase","memo","props","localTarget","element","window","scroll","top","left","behavior","newDelay","j"],"sourceRoot":""}