{"version":3,"file":"static/js/3843.f95bad0b.chunk.js","mappings":"yNAkBMA,GAAOC,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IAChBC,GAAYD,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IAGrBE,GAAkBF,EAAAA,EAAAA,KAAS,kBAC/B,8BAD+B,IAG3BG,GAAgBH,EAAAA,EAAAA,KAAS,kBAC7B,2EAD6B,IAGzBI,GAAUJ,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IACnBK,GAAOL,EAAAA,EAAAA,KAAS,kBAAM,iEAAN,IAEhBM,EAAe,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAEFE,GAAMC,EAAAA,EAAAA,QAAO,MACbC,GAAWC,EAAAA,EAAAA,GAAUH,GAErBI,GAAWC,EAAAA,EAAAA,cACf,SAACC,GAOA,GACD,CAACV,EAAUM,IAUb,OAPAK,EAAAA,EAAAA,YAAU,WAER,OADAC,OAAOC,iBAAiB,SAAUL,GAC3B,WACLI,OAAOE,oBAAoB,SAAUN,EACtC,CACF,GAAE,CAACA,KAGF,SAAC,EAAAO,SAAD,WACE,SAAClB,EAAD,CAASO,IAAKA,EAAKY,GAAG,gBAAtB,UACE,UAACtB,EAAD,CACEuB,QAAQ,SACRC,WAAW,SACXC,QAAQ,OACRC,UAAU,SACVC,IAAK,CACHC,OAAQ,OACRC,MAAO,OACPC,IAAK,CACHC,eAAgB,SAChBP,WAAY,SACZC,QAAS,OACTO,cAAe,WAZrB,WAgBE,SAAC9B,EAAD,KACA,SAACD,EAAD,WACE,SAACH,EAAD,CAAMmC,IAAE,EAACC,WAAWP,EAAAA,EAAAA,IAAI,CAAEQ,UAAW,WAArC,SACG3B,EAAc4B,MAAM/B,aAAagC,WAGtC,SAACpC,EAAD,CAAiBqC,MAAM,OAAvB,UACE,SAACxC,EAAD,CAAM6B,IAAK,CAAEQ,UAAW,UAAxB,SACG3B,EAAc4B,MAAM/B,aAAaP,UAGtC,SAACG,EAAD,CAAiBqC,MAAM,OAAvB,UACE,SAACxC,EAAD,CAAM6B,IAAK,CAAEQ,UAAW,UAAxB,SACG3B,EAAc4B,MAAM/B,aAAakC,YAGtC,SAACvC,EAAD,CACEuB,QAAQ,SACRE,QAAQ,OACRe,KAAK,OACLb,IAAK,CACHc,UAAW,OACXT,cAAe,iBACfF,IAAK,CACHL,QAAS,OACTO,cAAe,QATrB,SAaGxB,EAAc4B,MAAM/B,aAAaqC,SAASC,KAAI,SAACC,EAAMC,GAAP,OAC7C,SAAC5C,EAAD,CACEqC,MAAK,WAAKQ,EAAAA,EAAAA,GAAWD,EAAG,IAAnB,KADP,UAIE,SAACzC,EAAD,CACE2C,MAAOH,EAAKI,MACZC,IAAI,QACJC,KAAMN,EAAKO,KACXC,KAAMR,EAAKP,MACXgB,KAAMT,EAAK9C,KACXwD,UAAQ,KARLV,EAAKP,MAHiC,YAoB1D,EAEKkB,GAAmBC,EAAAA,EAAAA,OAAK,SAACC,GAAD,OAAW,SAACpD,GAAD,UAAkBoD,GAA7B,IAE9B,W,8EC3HO,IAAMC,EAAW,WAAiB,IAAhBC,EAAe,uDAAN,EAC5BC,EAAc,EAClB,GAAsB,kBAAXD,EAAqB,CAC9B,IAAME,EAAUC,SAASC,eAAeJ,GACxB,OAAZE,IAAkBD,EAAcC,EAAQG,UAAY,IACzD,CACD9C,OAAO+C,OAAO,CACZC,IAAKN,EAAc,IAAMA,EAAcD,EACvCQ,KAAM,EACNC,SAAU,UAEb,EAQYtB,EAAa,SAACD,EAAGP,GAE5B,IADA,IAAI+B,EAAW/B,EACNgC,EAAI,EAAGA,EAAIzB,EAAGyB,GAAK,EAAGD,GAAY,GAC3C,OAAOA,CACR,C","sources":["layouts/SideProjects/SideProjects.jsx","utils/functions.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { memo, useCallback, useEffect, useRef, Suspense } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport loadable from \"@loadable/component\";\r\n\r\n// @emotion/css\r\nimport { css } from \"@emotion/css\";\r\n\r\n// framer-motion\r\nimport { useInView } from \"framer-motion\";\r\n\r\n// utils\r\nimport { parseDelay } from \"../../utils/functions\";\r\n\r\n// contexts\r\nimport { useLanguage } from \"../../contexts/LanguageProvider\";\r\n\r\n// @nextui-org\r\nconst Text = loadable(() => import(\"../../components/NextUI/Text\"));\r\nconst Container = loadable(() => import(\"../../components/NextUI/Container\"));\r\n\r\n// own components\r\nconst InViewComponent = loadable(() =>\r\n  import(\"../../components/InViewComponent/InViewComponent\")\r\n);\r\nconst FloatingIcons = loadable(() =>\r\n  import(\"./FloatingIcons.jsx/FloatingIcons\")\r\n);\r\nconst Section = loadable(() => import(\"../../components/Section/Section\"));\r\nconst Card = loadable(() => import(\"../../components/Card/Card\"));\r\n\r\nconst SideProjects = () => {\r\n  const navigate = useNavigate();\r\n  const { languageState } = useLanguage();\r\n\r\n  const ref = useRef(null);\r\n  const isInView = useInView(ref);\r\n\r\n  const onScroll = useCallback(\r\n    (e) => {\r\n      // const top = window.pageYOffset || document.documentElement.scrollTop;\r\n      // const sideProjectsTop = document.getElementById(\"side-projects\");\r\n      // if (isInView) {\r\n      // if (sideProjectsTop.offsetTop - 100 < top) navigate(\"#side-projects\");\r\n      // else navigate(\"#projects\");\r\n      // }\r\n    },\r\n    [navigate, isInView]\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  }, [onScroll]);\r\n\r\n  return (\r\n    <Suspense>\r\n      <Section ref={ref} id=\"side-projects\">\r\n        <Container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          direction=\"column\"\r\n          css={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            div: {\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            },\r\n          }}\r\n        >\r\n          <FloatingIcons />\r\n          <InViewComponent>\r\n            <Text h2 className={css({ textAlign: \"center\" })}>\r\n              {languageState.texts.SideProjects.Title}\r\n            </Text>\r\n          </InViewComponent>\r\n          <InViewComponent delay=\"0.4s\">\r\n            <Text css={{ textAlign: \"center\" }}>\r\n              {languageState.texts.SideProjects.Text}\r\n            </Text>\r\n          </InViewComponent>\r\n          <InViewComponent delay=\"0.5s\">\r\n            <Text css={{ textAlign: \"center\" }}>\r\n              {languageState.texts.SideProjects.CallMe}\r\n            </Text>\r\n          </InViewComponent>\r\n          <Container\r\n            justify=\"center\"\r\n            display=\"flex\"\r\n            wrap=\"wrap\"\r\n            css={{\r\n              marginTop: \"10px\",\r\n              flexDirection: \"row !important\",\r\n              div: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n              },\r\n            }}\r\n          >\r\n            {languageState.texts.SideProjects.Projects.map((item, i) => (\r\n              <InViewComponent\r\n                delay={`${parseDelay(i, 0.4)}s`}\r\n                key={item.Title}\r\n              >\r\n                <Card\r\n                  image={item.Image}\r\n                  alt=\"about\"\r\n                  link={item.Link}\r\n                  text={item.Title}\r\n                  more={item.Text}\r\n                  external\r\n                />\r\n              </InViewComponent>\r\n            ))}\r\n          </Container>\r\n        </Container>\r\n      </Section>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst SideProjectsMemo = memo((props) => <SideProjects {...props} />);\r\n\r\nexport default SideProjectsMemo;\r\n","// @ts-check\n\n/**\n * Scroll to a target position, default the top of the page.\n * @param {number} [target=0] - The target position to scroll to. If a string is passed it looks for respective element with target id\n */\nexport const scrollTo = (target = 0) => {\n  let localTarget = 0;\n  if (typeof target === \"string\") {\n    const element = document.getElementById(target);\n    if (element !== null) localTarget = element.offsetTop - 100;\n  }\n  window.scroll({\n    top: localTarget > 100 ? localTarget : target,\n    left: 0,\n    behavior: \"smooth\",\n  });\n};\n\n/**\n *\n * @param {number} i\n * @param {number} delay\n * @returns\n */\nexport const parseDelay = (i, delay) => {\n  let newDelay = delay;\n  for (let j = 0; j < i; j += 1) newDelay += 0.1;\n  return newDelay;\n};\n"],"names":["Text","loadable","Container","InViewComponent","FloatingIcons","Section","Card","SideProjects","navigate","useNavigate","languageState","useLanguage","ref","useRef","isInView","useInView","onScroll","useCallback","e","useEffect","window","addEventListener","removeEventListener","Suspense","id","justify","alignItems","display","direction","css","height","width","div","justifyContent","flexDirection","h2","className","textAlign","texts","Title","delay","CallMe","wrap","marginTop","Projects","map","item","i","parseDelay","image","Image","alt","link","Link","text","more","external","SideProjectsMemo","memo","props","scrollTo","target","localTarget","element","document","getElementById","offsetTop","scroll","top","left","behavior","newDelay","j"],"sourceRoot":""}