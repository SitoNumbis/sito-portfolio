{"version":3,"file":"static/js/6718.5046cbc0.chunk.js","mappings":"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","sources":["layouts/Hero/Hero.jsx","utils/functions.js"],"sourcesContent":["import React, { Suspense, useCallback, memo } from \"react\";\r\nimport loadable from \"@loadable/component\";\r\n\r\n// @fortawesome\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faInstagram,\r\n  faTwitter,\r\n  faGithub,\r\n  faLinkedin,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n// @emotion/css\r\nimport { css } from \"@emotion/css\";\r\n\r\n// contexts\r\nimport { useLanguage } from \"../../contexts/LanguageProvider\";\r\n\r\n// utils\r\nimport { parseDelay } from \"../../utils/functions\";\r\nimport { scrollTo } from \"some-javascript-utils/browser\";\r\n\r\n// @nextui-org\r\nconst Link = loadable(() => import(\"../../components/NextUI/Link\"));\r\nconst Text = loadable(() => import(\"../../components/NextUI/Text\"));\r\nconst Button = loadable(() => import(\"../../components/NextUI/Button\"));\r\n\r\n// own components\r\nconst InViewComponent = loadable(() =>\r\n  import(\"../../components/InViewComponent/InViewComponent\")\r\n);\r\nconst FloatingIcons = loadable(() => import(\"./components/FloatingIcons\"));\r\nconst Section = loadable(() => import(\"../../components/Section/Section\"));\r\n\r\nconst Hero = () => {\r\n  const { languageState } = useLanguage();\r\n\r\n  const icons = [faGithub, faInstagram, faTwitter, faLinkedin];\r\n\r\n  const scrollToProjects = useCallback(() => {\r\n    scrollTo(document.getElementById(\"#projects\")?.offsetTop);\r\n  }, []);\r\n\r\n  return (\r\n    <Suspense>\r\n      <Section id=\"hero\">\r\n        <FloatingIcons />\r\n        <div\r\n          className={css({\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            div: {\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            },\r\n          })}\r\n        >\r\n          <InViewComponent>\r\n            <Text h1 css={{ textAlign: \"center\" }}>\r\n              {languageState.texts.Hero.Title}\r\n            </Text>\r\n          </InViewComponent>\r\n          <InViewComponent delay=\"0.4s\">\r\n            <Text>{languageState.texts.Hero.Text}</Text>\r\n          </InViewComponent>\r\n          <InViewComponent delay=\"0.5s\">\r\n            <Link\r\n              href=\"#projects\"\r\n              className={css({\r\n                textDecoration: \"none\",\r\n                transition: \"all 500ms ease\",\r\n                \"&:hover\": {\r\n                  transform: \"translateY(-5px)\",\r\n                },\r\n              })}\r\n            >\r\n              <Button\r\n                id=\"to-projects\"\r\n                aria-label={languageState.texts.AriaLabels.toProjects}\r\n                onClick={scrollToProjects}\r\n                css={{\r\n                  borderRadius: \"100%\",\r\n                  marginTop: \"15px\",\r\n                  minWidth: \"0px !important\",\r\n                  width: \"40px\",\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faArrowDown} />\r\n              </Button>\r\n            </Link>\r\n          </InViewComponent>\r\n          <InViewComponent delay=\"0.6s\">\r\n            <Text\r\n              css={{\r\n                textAlign: \"center\",\r\n                marginBottom: \"10px\",\r\n                marginTop: \"50px\",\r\n              }}\r\n            >\r\n              {languageState.texts.Hero.Meet}\r\n            </Text>\r\n          </InViewComponent>\r\n          <div\r\n            className={css({\r\n              justifyContent: \"center\",\r\n              flexDirection: \"row !important\",\r\n              gap: \"15px\",\r\n              a: {\r\n                fontSize: \"30px\",\r\n                marginRight: \"10px\",\r\n                transition: \"all 500ms ease\",\r\n                \"&:hover\": { transform: \"translateY(-5px)\" },\r\n              },\r\n              div: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n              },\r\n              flexWrap: \"wrap\",\r\n            })}\r\n          >\r\n            {languageState.texts.Hero.Social.map((item, i) => (\r\n              <InViewComponent key={item.Text} delay={`${parseDelay(i, 0.6)}s`}>\r\n                <Link\r\n                  href={item.Link}\r\n                  rel=\"noreferrer\"\r\n                  target=\"_blank\"\r\n                  ariaLabels={`${languageState.texts.AriaLabels.linkTo} ${item.Text}`}\r\n                  name={item.Text.toLowerCase()}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    className={css({ fontSize: \"30px\" })}\r\n                    icon={icons[i]}\r\n                  />\r\n                </Link>\r\n              </InViewComponent>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Section>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst HeroMemo = memo((props) => <Hero {...props} />);\r\n\r\nexport default HeroMemo;\r\n","// @ts-check\n\n/**\n * Scroll to a target position, default the top of the page.\n * @param {number} [target=0] - The target position to scroll to. If a string is passed it looks for respective element with target id\n */\nexport const scrollTo = (target = 0) => {\n  let localTarget = 0;\n  if (typeof target === \"string\") {\n    const element = document.getElementById(target);\n    if (element !== null) localTarget = element.offsetTop - 100;\n  }\n  window.scroll({\n    top: localTarget > 100 ? localTarget : target,\n    left: 0,\n    behavior: \"smooth\",\n  });\n};\n\n/**\n *\n * @param {number} i\n * @param {number} delay\n * @returns\n */\nexport const parseDelay = (i, delay) => {\n  let newDelay = delay;\n  for (let j = 0; j < i; j += 1) newDelay += 0.1;\n  return newDelay;\n};\n"],"names":["Link","loadable","Text","Button","InViewComponent","FloatingIcons","Section","Hero","languageState","useLanguage","icons","faGithub","faInstagram","faTwitter","faLinkedin","scrollToProjects","useCallback","scrollTo","document","getElementById","offsetTop","Suspense","id","className","css","justifyContent","alignItems","flexDirection","height","width","div","display","h1","textAlign","texts","Title","delay","href","textDecoration","transition","transform","AriaLabels","toProjects","onClick","borderRadius","marginTop","minWidth","icon","faArrowDown","marginBottom","Meet","gap","a","fontSize","marginRight","flexWrap","Social","map","item","i","parseDelay","rel","target","ariaLabels","linkTo","name","toLowerCase","HeroMemo","memo","props","localTarget","element","window","scroll","top","left","behavior","newDelay","j"],"sourceRoot":""}