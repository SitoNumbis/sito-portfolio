{"version":3,"file":"static/js/1083.d652bd35.chunk.js","mappings":"yNAkBMA,GAASC,EAAAA,EAAAA,KAAS,kBAAM,qFAAN,IAClBC,GAAOD,EAAAA,EAAAA,KAAS,kBAAM,iEAAN,IAChBE,GAAOF,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IAoGtB,UAlGkB,SAACG,GACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,EAAyBH,EAAzBG,QAASC,EAAgBJ,EAAhBI,YAETC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAER,GAAoCE,EAAAA,EAAAA,UAAS,SAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACR,IAAQC,EAASV,EAATU,KACRF,EAAcE,EAAKC,OAASD,EAAOH,EACpC,GAAE,CAACP,KAGF,SAAC,EAAAY,SAAD,WACE,gBACEC,QAASV,EACTW,WAAWC,EAAAA,EAAAA,IAAI,CACbC,IAAK,EACLC,KAAM,EACNC,OAAQ,QACRC,SAAU,QACVC,MAAO,OACPC,cAAgBnB,EAAmB,OAAT,OAC1BoB,QAASpB,EAAU,EAAI,EACvBqB,WAAY,qBACZC,WAAY,cAXhB,UAcE,iBACEV,WAAWC,EAAAA,EAAAA,IAAI,CACbI,SAAU,WACVE,cAAe,OACfI,cAAe,SACfP,OAAQ,OACRE,MAAO,QACPM,UAAU,cAAD,OAAgBxB,EAAU,EAAI,SAA9B,KACTqB,WAAY,iBACZC,WAAY,UACZG,OAAQ,SAVZ,WAaE,SAAChC,EAAD,CACEiC,MAAI,EACJC,SAAO,EACPd,IAAK,CACHe,OAAQ,OACRV,MAAO,OACPW,SAAU,IACVZ,SAAU,WACVa,MAAO,OAETC,QAAS9B,EAVX,UAYE,SAAC,IAAD,CAAiB+B,KAAMC,EAAAA,SAEzB,iBACErB,WAAWC,EAAAA,EAAAA,IAAI,CACbqB,YAAa,OACbC,WAAY,OACZZ,cAAe,WAJnB,WAOE,SAAC3B,EAAD,CAAMwC,IAAE,EAAR,kBACClC,EAAcmC,MAAMC,OAAOC,MAAMC,KAAI,SAACC,GAAD,OACpC,SAAC9C,EAAD,CAAoB+C,KAAMD,EAAKE,GAA/B,UACE,SAAClD,EAAD,CACEiC,MAAI,EACJC,SAAO,EACPiB,MAAM,UAENb,QAAS9B,EACT4C,MAAOJ,EAAKE,KAAOtC,EACnBQ,IAAK,CACHe,OAAQ,QACRkB,eAAgB,QAChBC,KAAM,CACJD,eAAgB,wBAChB5B,MAAO,SAZb,SAgBGuB,EAAKO,OAZDP,EAAKQ,QALHR,EAAKE,GADoB,aA2BjD,C","sources":["components/OffCanvas/OffCanvas.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport loadable from \"@loadable/component\";\n\nimport PropTypes from \"prop-types\";\n\n// @emotion/css\nimport { css } from \"@emotion/css\";\n\n// @fortawesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClose } from \"@fortawesome/free-solid-svg-icons\";\n\n// contexts\nimport { useLanguage } from \"../../contexts/LanguageProvider\";\n\n// @nextui-org\nconst Button = loadable(() => import(\"../../components/NextUI/Button\"));\nconst Link = loadable(() => import(\"../../components/NextUI/Link\"));\nconst Text = loadable(() => import(\"../../components/NextUI/Text\"));\n\nconst OffCanvas = (props) => {\n  const location = useLocation();\n  const { visible, handleClose } = props;\n\n  const { languageState } = useLanguage();\n\n  const [activeLink, setActiveLink] = useState(\"#hero\");\n\n  useEffect(() => {\n    const { hash } = location;\n    setActiveLink(hash.length ? hash : activeLink);\n  }, [location]);\n\n  return (\n    <Suspense>\n      <div\n        onClick={handleClose}\n        className={css({\n          top: 0,\n          left: 0,\n          height: \"100vh\",\n          position: \"fixed\",\n          width: \"100%\",\n          pointerEvents: !visible ? \"none\" : \"auto\",\n          opacity: visible ? 1 : 0,\n          transition: \"opacity 500ms ease\",\n          background: \"#222222ce\",\n        })}\n      >\n        <div\n          className={css({\n            position: \"relative\",\n            pointerEvents: \"auto\",\n            flexDirection: \"column\",\n            height: \"100%\",\n            width: \"300px\",\n            transform: `translateX(${visible ? 0 : \"-300px\"})`,\n            transition: \"all 500ms ease\",\n            background: \"#333444\",\n            zIndex: 999999,\n          })}\n        >\n          <Button\n            flat\n            rounded\n            css={{\n              margin: \"10px\",\n              width: \"40px\",\n              minWidth: \"0\",\n              position: \"absolute\",\n              right: \"0px\",\n            }}\n            onPress={handleClose}\n          >\n            <FontAwesomeIcon icon={faClose} />\n          </Button>\n          <div\n            className={css({\n              paddingLeft: \"20px\",\n              paddingTop: \"40px\",\n              flexDirection: \"column\",\n            })}\n          >\n            <Text h3>Sito</Text>\n            {languageState.texts.Navbar.Links.map((item) => (\n              <Link key={item.to} href={item.to}>\n                <Button\n                  flat\n                  rounded\n                  color=\"inherit\"\n                  key={item.Label}\n                  onPress={handleClose}\n                  light={item.to !== activeLink}\n                  css={{\n                    margin: \"5px 0\",\n                    justifyContent: \"start\",\n                    span: {\n                      justifyContent: \"flex-start !important\",\n                      width: \"100%\",\n                    },\n                  }}\n                >\n                  {item.label}\n                </Button>\n              </Link>\n            ))}\n          </div>\n        </div>\n      </div>\n    </Suspense>\n  );\n};\n\nOffCanvas.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default OffCanvas;\n"],"names":["Button","loadable","Link","Text","props","location","useLocation","visible","handleClose","languageState","useLanguage","useState","activeLink","setActiveLink","useEffect","hash","length","Suspense","onClick","className","css","top","left","height","position","width","pointerEvents","opacity","transition","background","flexDirection","transform","zIndex","flat","rounded","margin","minWidth","right","onPress","icon","faClose","paddingLeft","paddingTop","h3","texts","Navbar","Links","map","item","href","to","color","light","justifyContent","span","label","Label"],"sourceRoot":""}