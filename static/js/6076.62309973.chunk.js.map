{"version":3,"file":"static/js/6076.62309973.chunk.js","mappings":"sdAoBMA,GAAYC,EAAAA,EAAAA,KAAS,kBAAM,uDAAN,IACrBC,GAAkBD,EAAAA,EAAAA,KAAS,kBAC/B,uDAD+B,IAG3BE,GAAgBF,EAAAA,EAAAA,KAAS,kBAC7B,uDAD6B,IAGzBG,GAAkBH,EAAAA,EAAAA,KAAS,kBAC/B,uDAD+B,IAG3BI,GAAYJ,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IACrBK,GAAQL,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IACjBM,GAASN,EAAAA,EAAAA,KAAS,kBAAM,2EAAN,IAClBO,GAAOP,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IAChBQ,GAAOR,EAAAA,EAAAA,KAAS,kBAAM,uDAAN,IA2GtB,EAzGc,SAACS,GACb,IAAQC,EAAsCD,EAAtCC,QAASC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,QAE1BC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAEFE,EAAS,CACb,WAAYC,EACZ,UAAWC,EACX,aAAcC,EACd,YAAaC,EACb,UAAWC,EACX,WAAYC,EACZ,cAAeC,EACf,gBAAiBC,EACjB,eAAgBC,GAGlB,OACE,SAAC,EAAAC,SAAD,WACE,UAAC3B,GAAD,gBACE4B,aAAW,EACXC,MAAI,EACJC,QAAM,EACNC,MAAM,QACN,kBAAgB,cAChB,mBAAiB,oBACjBC,IAAK,CAAEC,SAAU,aACbrB,GARN,eAUE,SAACV,EAAD,WACE,SAACM,EAAD,CAAM0B,GAAG,cAAcC,KAAM,GAA7B,SACGtB,OAGL,SAACV,EAAD,UACGW,EAAQsB,KAAI,SAACC,EAAMC,GAAP,OACX,UAACjC,EAAD,CAAW6B,GAAG,oBAAd,UACiB,SAAdG,EAAKE,OAAmB,SAAC/B,EAAD,UAAO6B,EAAKG,UACtB,UAAdH,EAAKE,OACJ,SAACjC,EAAD,CACE0B,IAAK,CACHD,MAAO,OACPU,OAAQ,OACRC,aAAc,QAEhBC,IAAK1B,EAAOoB,EAAKO,QACjBC,IAAKR,EAAKS,MAGC,WAAdT,EAAKE,OACJ,SAAClC,EAAD,CACE0C,QAAQ,OACRC,WAAW,SACXC,QAAQ,SACRC,KAAK,OAJP,SAMGb,EAAKG,QAAQJ,KAAI,SAACe,GAAD,OAChB,SAAC1C,EAAD,CAEE2C,KAAMD,EAAK1C,KACX4C,OAAO,SACPC,IAAI,WAJN,UAME,SAAChD,EAAD,CACE0B,IAAK,CACHD,MAAO,OACPU,OAAQ,OACRC,aAAc,OACda,YAAa,QAGfZ,IAAK1B,EAAOkC,EAAKP,QACjBC,IAAKM,EAAKL,KAFLK,EAAKL,MAZPK,EAAKL,IAFI,MAsBP,UAAdT,EAAKE,OAAoB,SAAC/B,EAAD,CAAMgD,IAAE,EAAR,SAAUnB,EAAKG,YA1CJF,EAD5B,OA+Cf,SAAClC,EAAD,WACE,SAACG,EAAD,CACE2B,GAAG,cACH,aAAYnB,EAAc0C,MAAMC,WAAWC,WAC3CC,MAAI,EACJC,MAAI,EACJC,MAAM,QACNC,QAASpD,EANX,SAQGI,EAAc0C,MAAMO,MAAMC,eAMtC,C","sources":["components/Modal/Modal.jsx"],"sourcesContent":["import React, { Suspense } from \"react\";\r\nimport loadable from \"@loadable/component\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n// contexts\r\nimport { useLanguage } from \"../../contexts/LanguageProvider\";\r\n\r\n// images\r\nimport js from \"../../assets/images/logos/js.webp\";\r\nimport qt from \"../../assets/images/logos/qt.webp\";\r\nimport cpp from \"../../assets/images/logos/cpp.webp\";\r\nimport mui from \"../../assets/images/logos/mui.webp\";\r\nimport node from \"../../assets/images/logos/node.webp\";\r\nimport react from \"../../assets/images/logos/react.webp\";\r\nimport nextui from \"../../assets/images/logos/nextui.webp\";\r\nimport mongodb from \"../../assets/images/logos/mongodb.webp\";\r\nimport firebase from \"../../assets/images/logos/firebase.webp\";\r\n\r\n// @nextui-org\r\nconst NextModal = loadable(() => import(\"../../components/NextUI/Modal\"));\r\nconst NextModalHeader = loadable(() =>\r\n  import(\"../../components/NextUI/ModalHeader\")\r\n);\r\nconst NextModalBody = loadable(() =>\r\n  import(\"../../components/NextUI/ModalBody\")\r\n);\r\nconst NextModalFooter = loadable(() =>\r\n  import(\"../../components/NextUI/ModalFooter\")\r\n);\r\nconst Container = loadable(() => import(\"../../components/NextUI/Container\"));\r\nconst Image = loadable(() => import(\"../../components/NextUI/Image\"));\r\nconst Button = loadable(() => import(\"../../components/NextUI/Button\"));\r\nconst Text = loadable(() => import(\"../../components/NextUI/Text\"));\r\nconst Link = loadable(() => import(\"../../components/NextUI/Link\"));\r\n\r\nconst Modal = (props) => {\r\n  const { onClose, bindings, title, content } = props;\r\n\r\n  const { languageState } = useLanguage();\r\n\r\n  const images = {\r\n    \"cpp-logo\": cpp,\r\n    \"qt-logo\": qt,\r\n    \"react-logo\": react,\r\n    \"node-logo\": node,\r\n    \"js-logo\": js,\r\n    \"mui-logo\": mui,\r\n    \"nextui-logo\": nextui,\r\n    \"firebase-logo\": firebase,\r\n    \"mongodb-logo\": mongodb,\r\n  };\r\n\r\n  return (\r\n    <Suspense>\r\n      <NextModal\r\n        closeButton\r\n        blur\r\n        scroll\r\n        width=\"600px\"\r\n        aria-labelledby=\"modal-title\"\r\n        aria-describedby=\"modal-description\"\r\n        css={{ position: \"relative\" }}\r\n        {...bindings}\r\n      >\r\n        <NextModalHeader>\r\n          <Text id=\"modal-title\" size={18}>\r\n            {title}\r\n          </Text>\r\n        </NextModalHeader>\r\n        <NextModalBody>\r\n          {content.map((item, i) => (\r\n            <Container id=\"modal-description\" key={i}>\r\n              {item.Type === \"Text\" && <Text>{item.Content}</Text>}\r\n              {item.Type === \"Image\" && (\r\n                <Image\r\n                  css={{\r\n                    width: \"40px\",\r\n                    height: \"40px\",\r\n                    borderRadius: \"100%\",\r\n                  }}\r\n                  src={images[item.Source]}\r\n                  alt={item.Alt}\r\n                />\r\n              )}\r\n              {item.Type === \"Images\" && (\r\n                <Container\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  justify=\"center\"\r\n                  wrap=\"wrap\"\r\n                >\r\n                  {item.Content.map((jtem) => (\r\n                    <Link\r\n                      key={jtem.Alt}\r\n                      href={jtem.Link}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener\"\r\n                    >\r\n                      <Image\r\n                        css={{\r\n                          width: \"40px\",\r\n                          height: \"40px\",\r\n                          borderRadius: \"100%\",\r\n                          marginRight: \"10px\",\r\n                        }}\r\n                        key={jtem.Alt}\r\n                        src={images[jtem.Source]}\r\n                        alt={jtem.Alt}\r\n                      />\r\n                    </Link>\r\n                  ))}\r\n                </Container>\r\n              )}\r\n              {item.Type === \"Title\" && <Text h4>{item.Content}</Text>}\r\n            </Container>\r\n          ))}\r\n        </NextModalBody>\r\n        <NextModalFooter>\r\n          <Button\r\n            id=\"close-modal\"\r\n            aria-label={languageState.texts.AriaLabels.closeModal}\r\n            auto\r\n            flat\r\n            color=\"error\"\r\n            onClick={onClose}\r\n          >\r\n            {languageState.texts.Modal.Close}\r\n          </Button>\r\n        </NextModalFooter>\r\n      </NextModal>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  content: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n"],"names":["NextModal","loadable","NextModalHeader","NextModalBody","NextModalFooter","Container","Image","Button","Text","Link","props","onClose","bindings","title","content","languageState","useLanguage","images","cpp","qt","react","node","js","mui","nextui","firebase","mongodb","Suspense","closeButton","blur","scroll","width","css","position","id","size","map","item","i","Type","Content","height","borderRadius","src","Source","alt","Alt","display","alignItems","justify","wrap","jtem","href","target","rel","marginRight","h4","texts","AriaLabels","closeModal","auto","flat","color","onClick","Modal","Close"],"sourceRoot":""}