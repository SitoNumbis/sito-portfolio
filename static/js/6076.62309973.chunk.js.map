{"version":3,"file":"static/js/6076.62309973.chunk.js","mappings":"sdAoBMA,GAAYC,EAAAA,EAAAA,KAAS,kBAAM,uDAAN,IACrBC,GAAkBD,EAAAA,EAAAA,KAAS,kBAC/B,uDAD+B,IAG3BE,GAAgBF,EAAAA,EAAAA,KAAS,kBAC7B,uDAD6B,IAGzBG,GAAkBH,EAAAA,EAAAA,KAAS,kBAC/B,uDAD+B,IAG3BI,GAAYJ,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IACrBK,GAAQL,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IACjBM,GAASN,EAAAA,EAAAA,KAAS,kBAAM,2EAAN,IAClBO,GAAOP,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IAChBQ,GAAOR,EAAAA,EAAAA,KAAS,kBAAM,uDAAN,IA2GtB,EAzGc,SAACS,GACb,IAAQC,EAAsCD,EAAtCC,QAASC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,QAE1BC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAEFE,EAAS,CACb,WAAYC,EACZ,UAAWC,EACX,aAAcC,EACd,YAAaC,EACb,UAAWC,EACX,WAAYC,EACZ,cAAeC,EACf,gBAAiBC,EACjB,eAAgBC,GAGlB,OACE,SAAC,EAAAC,SAAD,WACE,UAAC3B,GAAD,gBACE4B,aAAW,EACXC,MAAI,EACJC,QAAM,EACNC,MAAM,QACN,kBAAgB,cAChB,mBAAiB,oBACjBC,IAAK,CAAEC,SAAU,aACbrB,GARN,eAUE,SAACV,EAAD,WACE,SAACM,EAAD,CAAM0B,GAAG,cAAcC,KAAM,GAA7B,SACGtB,OAGL,SAACV,EAAD,UACGW,EAAQsB,KAAI,SAACC,EAAMC,GAAP,OACX,UAACjC,EAAD,CAAW6B,GAAG,oBAAd,UACiB,SAAdG,EAAKE,OAAmB,SAAC/B,EAAD,UAAO6B,EAAKG,UACtB,UAAdH,EAAKE,OACJ,SAACjC,EAAD,CACE0B,IAAK,CACHD,MAAO,OACPU,OAAQ,OACRC,aAAc,QAEhBC,IAAK1B,EAAOoB,EAAKO,QACjBC,IAAKR,EAAKS,MAGC,WAAdT,EAAKE,OACJ,SAAClC,EAAD,CACE0C,QAAQ,OACRC,WAAW,SACXC,QAAQ,SACRC,KAAK,OAJP,SAMGb,EAAKG,QAAQJ,KAAI,SAACe,GAAD,OAChB,SAAC1C,EAAD,CAEE2C,KAAMD,EAAK1C,KACX4C,OAAO,SACPC,IAAI,WAJN,UAME,SAAChD,EAAD,CACE0B,IAAK,CACHD,MAAO,OACPU,OAAQ,OACRC,aAAc,OACda,YAAa,QAGfZ,IAAK1B,EAAOkC,EAAKP,QACjBC,IAAKM,EAAKL,KAFLK,EAAKL,MAZPK,EAAKL,IAFI,MAsBP,UAAdT,EAAKE,OAAoB,SAAC/B,EAAD,CAAMgD,IAAE,EAAR,SAAUnB,EAAKG,YA1CJF,EAD5B,OA+Cf,SAAClC,EAAD,WACE,SAACG,EAAD,CACE2B,GAAG,cACH,aAAYnB,EAAc0C,MAAMC,WAAWC,WAC3CC,MAAI,EACJC,MAAI,EACJC,MAAM,QACNC,QAASpD,EANX,SAQGI,EAAc0C,MAAMO,MAAMC,eAMtC,C","sources":["components/Modal/Modal.jsx"],"sourcesContent":["import React, { Suspense } from \"react\";\nimport loadable from \"@loadable/component\";\n\nimport PropTypes from \"prop-types\";\n\n// contexts\nimport { useLanguage } from \"../../contexts/LanguageProvider\";\n\n// images\nimport js from \"../../assets/images/logos/js.webp\";\nimport qt from \"../../assets/images/logos/qt.webp\";\nimport cpp from \"../../assets/images/logos/cpp.webp\";\nimport mui from \"../../assets/images/logos/mui.webp\";\nimport node from \"../../assets/images/logos/node.webp\";\nimport react from \"../../assets/images/logos/react.webp\";\nimport nextui from \"../../assets/images/logos/nextui.webp\";\nimport mongodb from \"../../assets/images/logos/mongodb.webp\";\nimport firebase from \"../../assets/images/logos/firebase.webp\";\n\n// @nextui-org\nconst NextModal = loadable(() => import(\"../../components/NextUI/Modal\"));\nconst NextModalHeader = loadable(() =>\n  import(\"../../components/NextUI/ModalHeader\")\n);\nconst NextModalBody = loadable(() =>\n  import(\"../../components/NextUI/ModalBody\")\n);\nconst NextModalFooter = loadable(() =>\n  import(\"../../components/NextUI/ModalFooter\")\n);\nconst Container = loadable(() => import(\"../../components/NextUI/Container\"));\nconst Image = loadable(() => import(\"../../components/NextUI/Image\"));\nconst Button = loadable(() => import(\"../../components/NextUI/Button\"));\nconst Text = loadable(() => import(\"../../components/NextUI/Text\"));\nconst Link = loadable(() => import(\"../../components/NextUI/Link\"));\n\nconst Modal = (props) => {\n  const { onClose, bindings, title, content } = props;\n\n  const { languageState } = useLanguage();\n\n  const images = {\n    \"cpp-logo\": cpp,\n    \"qt-logo\": qt,\n    \"react-logo\": react,\n    \"node-logo\": node,\n    \"js-logo\": js,\n    \"mui-logo\": mui,\n    \"nextui-logo\": nextui,\n    \"firebase-logo\": firebase,\n    \"mongodb-logo\": mongodb,\n  };\n\n  return (\n    <Suspense>\n      <NextModal\n        closeButton\n        blur\n        scroll\n        width=\"600px\"\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n        css={{ position: \"relative\" }}\n        {...bindings}\n      >\n        <NextModalHeader>\n          <Text id=\"modal-title\" size={18}>\n            {title}\n          </Text>\n        </NextModalHeader>\n        <NextModalBody>\n          {content.map((item, i) => (\n            <Container id=\"modal-description\" key={i}>\n              {item.Type === \"Text\" && <Text>{item.Content}</Text>}\n              {item.Type === \"Image\" && (\n                <Image\n                  css={{\n                    width: \"40px\",\n                    height: \"40px\",\n                    borderRadius: \"100%\",\n                  }}\n                  src={images[item.Source]}\n                  alt={item.Alt}\n                />\n              )}\n              {item.Type === \"Images\" && (\n                <Container\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justify=\"center\"\n                  wrap=\"wrap\"\n                >\n                  {item.Content.map((jtem) => (\n                    <Link\n                      key={jtem.Alt}\n                      href={jtem.Link}\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <Image\n                        css={{\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"100%\",\n                          marginRight: \"10px\",\n                        }}\n                        key={jtem.Alt}\n                        src={images[jtem.Source]}\n                        alt={jtem.Alt}\n                      />\n                    </Link>\n                  ))}\n                </Container>\n              )}\n              {item.Type === \"Title\" && <Text h4>{item.Content}</Text>}\n            </Container>\n          ))}\n        </NextModalBody>\n        <NextModalFooter>\n          <Button\n            id=\"close-modal\"\n            aria-label={languageState.texts.AriaLabels.closeModal}\n            auto\n            flat\n            color=\"error\"\n            onClick={onClose}\n          >\n            {languageState.texts.Modal.Close}\n          </Button>\n        </NextModalFooter>\n      </NextModal>\n    </Suspense>\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  content: PropTypes.array.isRequired,\n};\n\nexport default Modal;\n"],"names":["NextModal","loadable","NextModalHeader","NextModalBody","NextModalFooter","Container","Image","Button","Text","Link","props","onClose","bindings","title","content","languageState","useLanguage","images","cpp","qt","react","node","js","mui","nextui","firebase","mongodb","Suspense","closeButton","blur","scroll","width","css","position","id","size","map","item","i","Type","Content","height","borderRadius","src","Source","alt","Alt","display","alignItems","justify","wrap","jtem","href","target","rel","marginRight","h4","texts","AriaLabels","closeModal","auto","flat","color","onClick","Modal","Close"],"sourceRoot":""}