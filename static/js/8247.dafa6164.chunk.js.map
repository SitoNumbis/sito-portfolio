{"version":3,"file":"static/js/8247.dafa6164.chunk.js","mappings":"wSAqBMA,GAAYC,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IACrBC,GAAOD,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IAChBE,GAAOF,EAAAA,EAAAA,KAAS,kBAAM,iEAAN,IAGhBG,GAAkBH,EAAAA,EAAAA,KAAS,kBAC/B,8BAD+B,IAG3BI,GAAUJ,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IACnBK,GAAgBL,EAAAA,EAAAA,KAAS,kBAAM,uDAAN,IACzBM,GAAON,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IAmFtB,EAjFiB,WACf,IAAQO,GAAkBC,EAAAA,EAAAA,KAAlBD,cAER,OACE,SAAC,EAAAE,SAAD,WACE,SAACL,EAAD,CAASM,GAAG,WAAWC,WAAW,OAAlC,UACE,UAACZ,EAAD,CACEa,QAAQ,SACRC,WAAW,SACXC,QAAQ,OACRC,UAAU,SACVC,IAAK,CACHC,OAAQ,OACRC,MAAO,OACPC,IAAK,CACHC,eAAgB,SAChBP,WAAY,SACZC,QAAS,OACTO,cAAe,WAZrB,WAgBE,SAAChB,EAAD,KACA,SAACF,EAAD,WACE,SAACF,EAAD,CAAMqB,IAAE,EAACC,WAAWP,EAAAA,EAAAA,IAAI,CAAEQ,UAAW,WAArC,SACGjB,EAAckB,MAAMC,SAASC,WAGlC,SAACxB,EAAD,CAAiByB,MAAM,OAAvB,UACE,UAAC3B,EAAD,CAAMe,IAAK,CAAEQ,UAAW,UAAxB,UACGjB,EAAckB,MAAMC,SAASzB,MAC9B,UAACC,EAAD,CACE2B,KAAMtB,EAAckB,MAAMK,MAAMC,OAAO7B,KACvC8B,IAAI,aACJC,OAAO,SACPjB,IAAK,CAAEkB,OAAQ,QAJjB,UAMG3B,EAAckB,MAAMC,SAASS,SAC9B,SAAC,IAAD,CACEC,KAAMC,EAAAA,IACNd,WAAWP,EAAAA,EAAAA,IAAI,CAAEsB,WAAY,MAAOC,SAAU,oBAKtD,SAACxC,EAAD,CACEa,QAAQ,SACRE,QAAQ,OACR0B,KAAK,OACLxB,IAAK,CACHyB,UAAW,OACXpB,cAAe,iBACfF,IAAK,CACHL,QAAS,OACTO,cAAe,QATrB,SAaGd,EAAckB,MAAMC,SAASA,SAASgB,KAAI,SAACC,EAAMC,GAAP,OACzC,SAACzC,EAAD,CAEEyB,MAAK,WAAKiB,EAAAA,EAAAA,GAAWD,EAAG,IAAnB,KAFP,UAIE,SAAC1C,EAAD,CAAM2B,KAAMc,EAAKzC,KAAM+B,OAAO,SAASD,IAAI,WAA3C,UACE,SAAC1B,EAAD,CACEwC,MAAOH,EAAKI,OAASC,EACrBC,IAAG,UAAKN,EAAKhB,MAAV,SACHuB,QAAS,kBAAMC,OAAOC,KAAKT,EAAKzC,KAAvB,EACTmD,KAAMV,EAAKhB,MACX2B,KAAMX,EAAK1C,UATV0C,EAAKhB,MAF6B,YAqBtD,C,8EC1GM,IAAM4B,EAAW,WAAiB,IAAhBtB,EAAe,uDAAN,EAC5BuB,EAAc,EAClB,GAAsB,kBAAXvB,EAAqB,CAC9B,IAAMwB,EAAUC,SAASC,eAAe1B,GACxB,OAAZwB,IAAkBD,EAAcC,EAAQG,UAAY,IACzD,CACDT,OAAOU,OAAO,CACZC,IAAKN,EAAc,IAAMA,EAAcvB,EACvC8B,KAAM,EACNC,SAAU,UAEb,EAQYnB,EAAa,SAACD,EAAGhB,GAE5B,IADA,IAAIqC,EAAWrC,EACNsC,EAAI,EAAGA,EAAItB,EAAGsB,GAAK,EAAGD,GAAY,GAC3C,OAAOA,CACR,C","sources":["layouts/Projects/Projects.jsx","utils/functions.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { Suspense } from \"react\";\nimport loadable from \"@loadable/component\";\n\n// @emotion/css\nimport { css } from \"@emotion/css\";\n\n// @fortawesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExternalLink } from \"@fortawesome/free-solid-svg-icons\";\n\n// contexts\nimport { useLanguage } from \"../../contexts/LanguageProvider\";\n\n// utils\nimport { parseDelay } from \"../../utils/functions\";\n\n// image\nimport logistics from \"../../assets/images/projects/wmt.jpg\"\n\n// @nextui-org\nconst Container = loadable(() => import(\"../../components/NextUI/Container\"));\nconst Text = loadable(() => import(\"../../components/NextUI/Text\"));\nconst Link = loadable(() => import(\"../../components/NextUI/Link\"));\n\n// own components\nconst InViewComponent = loadable(() =>\n  import(\"../../components/InViewComponent/InViewComponent\")\n);\nconst Section = loadable(() => import(\"../../components/Section/Section\"));\nconst FloatingIcons = loadable(() => import(\"./components/FloatingIcons\"));\nconst Card = loadable(() => import(\"../../components/Card/Card\"));\n\nconst Projects = () => {\n  const { languageState } = useLanguage();\n\n  return (\n    <Suspense>\n      <Section id=\"projects\" background=\"#222\">\n        <Container\n          justify=\"center\"\n          alignItems=\"center\"\n          display=\"flex\"\n          direction=\"column\"\n          css={{\n            height: \"100%\",\n            width: \"100%\",\n            div: {\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            },\n          }}\n        >\n          <FloatingIcons />\n          <InViewComponent>\n            <Text h2 className={css({ textAlign: \"center\" })}>\n              {languageState.texts.Projects.Title}\n            </Text>\n          </InViewComponent>\n          <InViewComponent delay=\"0.4s\">\n            <Text css={{ textAlign: \"center\" }}>\n              {languageState.texts.Projects.Text}\n              <Link\n                href={languageState.texts.About.Github.Link}\n                rel=\"noreferrer\"\n                target=\"_blank\"\n                css={{ margin: \"auto\" }}\n              >\n                {languageState.texts.Projects.SeeMore}\n                <FontAwesomeIcon\n                  icon={faExternalLink}\n                  className={css({ marginLeft: \"5px\", fontSize: \"18px\" })}\n                />\n              </Link>\n            </Text>\n          </InViewComponent>\n          <Container\n            justify=\"center\"\n            display=\"flex\"\n            wrap=\"wrap\"\n            css={{\n              marginTop: \"10px\",\n              flexDirection: \"row !important\",\n              div: {\n                display: \"flex\",\n                flexDirection: \"row\",\n              },\n            }}\n          >\n            {languageState.texts.Projects.Projects.map((item, i) => (\n              <InViewComponent\n                key={item.Title}\n                delay={`${parseDelay(i, 0.4)}s`}\n              >\n                <Link href={item.Link} target=\"_blank\" rel=\"noopener\">\n                  <Card\n                    image={item.Image || logistics}\n                    alt={`${item.Title}-logo`}\n                    onClick={() => window.open(item.Link)}\n                    text={item.Title}\n                    more={item.Text}\n                  />\n                </Link>\n              </InViewComponent>\n            ))}\n          </Container>\n        </Container>\n      </Section>\n    </Suspense>\n  );\n};\n\nexport default Projects;\n","// @ts-check\n\n/**\n * Scroll to a target position, default the top of the page.\n * @param {number} [target=0] - The target position to scroll to. If a string is passed it looks for respective element with target id\n */\nexport const scrollTo = (target = 0) => {\n  let localTarget = 0;\n  if (typeof target === \"string\") {\n    const element = document.getElementById(target);\n    if (element !== null) localTarget = element.offsetTop - 100;\n  }\n  window.scroll({\n    top: localTarget > 100 ? localTarget : target,\n    left: 0,\n    behavior: \"smooth\",\n  });\n};\n\n/**\n *\n * @param {number} i\n * @param {number} delay\n * @returns\n */\nexport const parseDelay = (i, delay) => {\n  let newDelay = delay;\n  for (let j = 0; j < i; j += 1) newDelay += 0.1;\n  return newDelay;\n};\n"],"names":["Container","loadable","Text","Link","InViewComponent","Section","FloatingIcons","Card","languageState","useLanguage","Suspense","id","background","justify","alignItems","display","direction","css","height","width","div","justifyContent","flexDirection","h2","className","textAlign","texts","Projects","Title","delay","href","About","Github","rel","target","margin","SeeMore","icon","faExternalLink","marginLeft","fontSize","wrap","marginTop","map","item","i","parseDelay","image","Image","logistics","alt","onClick","window","open","text","more","scrollTo","localTarget","element","document","getElementById","offsetTop","scroll","top","left","behavior","newDelay","j"],"sourceRoot":""}