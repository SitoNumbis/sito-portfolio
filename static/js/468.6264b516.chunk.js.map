{"version":3,"file":"static/js/468.6264b516.chunk.js","mappings":"wKAUMA,EAAO,SAACC,GACZ,IAAQC,EAA0DD,EAA1DC,QAASC,EAAiDF,EAAjDE,KAAMC,EAA2CH,EAA3CG,KAAMC,EAAqCJ,EAArCI,MAAOC,EAA8BL,EAA9BK,IAAKC,EAAyBN,EAAzBM,MAAOC,EAAkBP,EAAlBO,MAAOC,EAAWR,EAAXQ,OACvD,OACE,UAAC,KAAD,CACEC,aAAW,EACXC,aAAW,EACXC,QAASV,EACTW,QAAQ,WACRC,IAAK,CACHC,SAAU,QACVN,OAAAA,EACAO,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,cAAe,qBAXnB,UAcGd,GACC,SAAC,KAAD,CACEW,MAAO,IACPP,OAAQ,IACRW,IAAKf,EACLC,IAAKA,EACLe,UAAU,UAEV,MACJ,UAAC,UAAD,CACEP,IAAK,CACHI,QAAS,OACTC,cAAe,oBACfG,WAAYd,GAJhB,UAOGD,GAAQ,wBAAKA,IAAc,MAC5B,cAAGgB,WAAWT,EAAAA,EAAAA,IAAI,CAAEU,UAAWhB,IAA/B,SAA0CL,KAC1C,cAAGoB,WAAWT,EAAAA,EAAAA,IAAI,CAAEU,UAAWhB,IAA/B,SAA0CJ,SAIjD,EAEDJ,EAAKyB,aAAe,CAClBvB,aAASwB,EACTlB,MAAO,SACPC,OAAQ,SAaV,K,wDC5DMkB,GAAUC,EAAAA,EAAAA,aAAW,SAAC3B,EAAO4B,GACjC,IAAQC,EAA6B7B,EAA7B6B,GAAIC,EAAyB9B,EAAzB8B,WAAYC,EAAa/B,EAAb+B,SAExB,OACE,gBACEH,IAAKA,EACLC,GAAIA,EACJP,WAAWT,EAAAA,EAAAA,IAAI,CACbI,QAAS,OACTe,eAAgB,SAChBX,WAAY,SACZY,QAAS,UACTC,UAAW,QACXJ,WAAAA,EACAK,SAAU,aAVd,SAaGJ,GAGN,IAEDL,EAAQF,aAAe,CACrBK,GAAI,GACJE,UAAU,wBACVD,WAAY,IASd,K,2IC5Be,SAASM,IACtB,IAAQC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAER,OACE,SAAC,IAAD,CAASR,GAAG,YAAYC,WAAW,UAAnC,UACE,iBACER,WAAWT,EAAAA,EAAAA,IAAI,CACbmB,eAAgB,SAChBX,WAAY,SACZJ,QAAS,OACTC,cAAe,SACfV,OAAQ,OACRO,MAAO,SAPX,WAUE,SAAC,IAAD,WACE,eAAIO,WAAWT,EAAAA,EAAAA,IAAI,CAAEU,UAAW,WAAhC,SACGc,EAAcE,MAAMH,QAAQI,WAGjC,gBAAKlB,WAAWT,EAAAA,EAAAA,IAAI,CAAE4B,SAAU,OAAQxB,QAAS,SAAjD,SACGoB,EAAcE,MAAMH,QAAQM,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACrC,SAAC,IAAD,WACE,SAAC,IAAD,CAAMvC,MAAOsC,EAAKtC,MAAOJ,KAAM0C,EAAKE,KAAMvC,MAAM,OAAOC,OAAO,WAD1CoC,EAAKtC,MADU,UAShD,C","sources":["components/Card/Card.jsx","components/Section/Section.jsx","layouts/WhatIDo/WhatIDo.jsx"],"sourcesContent":["import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\n// @emotion/css\nimport { css } from \"@emotion/css\";\n\n// @nextui-org\nimport { Card as NextCard, Image } from \"@nextui-org/react\";\n\nconst Card = (props) => {\n  const { onClick, text, more, image, alt, title, align, height } = props;\n  return (\n    <NextCard\n      isPressable\n      isHoverable\n      onPress={onClick}\n      variant=\"bordered\"\n      css={{\n        maxWidth: \"320px\",\n        height,\n        width: \"100%\",\n        margin: \"10px\",\n        display: \"flex\",\n        flexDirection: \"column !important\",\n      }}\n    >\n      {image ? (\n        <Image\n          width={320}\n          height={180}\n          src={image}\n          alt={alt}\n          objectFit=\"cover\"\n        />\n      ) : null}\n      <NextCard.Body\n        css={{\n          display: \"flex\",\n          flexDirection: \"column !important\",\n          alignItems: align,\n        }}\n      >\n        {title ? <h4>{title}</h4> : null}\n        <p className={css({ textAlign: align })}>{text}</p>\n        <p className={css({ textAlign: align })}>{more}</p>\n      </NextCard.Body>\n    </NextCard>\n  );\n};\n\nCard.defaultProps = {\n  onClick: undefined,\n  align: \"center\",\n  height: \"306px\",\n};\n\nCard.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n  more: PropTypes.string.isRequired,\n  image: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  height: PropTypes.string,\n};\n\nexport default Card;\n","import { forwardRef } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\n// @emotion/css\nimport { css } from \"@emotion/css\";\n\nconst Section = forwardRef((props, ref) => {\n  const { id, background, children } = props;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={css({\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"100px 0\",\n        minHeight: \"100vh\",\n        background,\n        position: \"relative\",\n      })}\n    >\n      {children}\n    </div>\n  );\n});\n\nSection.defaultProps = {\n  id: \"\",\n  children: <></>,\n  background: \"\",\n};\n\nSection.propTypes = {\n  id: PropTypes.string,\n  children: PropTypes.node,\n  background: PropTypes.string,\n};\n\nexport default Section;\n","import React from \"react\";\r\n\r\n// @emotion/css\r\nimport { css } from \"@emotion/css\";\r\n\r\n// contexts\r\nimport { useLanguage } from \"../../contexts/LanguageProvider\";\r\n\r\n// components\r\nimport Card from \"../../components/Card/Card\";\r\nimport Section from \"../../components/Section/Section\";\r\nimport InViewComponent from \"../../components/InViewComponent/InViewComponent\";\r\n\r\nexport default function WhatIDo() {\r\n  const { languageState } = useLanguage();\r\n\r\n  return (\r\n    <Section id=\"what-do-i\" background=\"#1b1b1b\">\r\n      <div\r\n        className={css({\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n        })}\r\n      >\r\n        <InViewComponent>\r\n          <h2 className={css({ textAlign: \"center\" })}>\r\n            {languageState.texts.WhatIDo.Title}\r\n          </h2>\r\n        </InViewComponent>\r\n        <div className={css({ flexWrap: \"wrap\", display: \"flex\" })}>\r\n          {languageState.texts.WhatIDo.Cards.map((item, i) => (\r\n            <InViewComponent key={item.title}>\r\n              <Card title={item.title} text={item.body} align=\"left\" height=\"220px\" />\r\n            </InViewComponent>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Section>\r\n  );\r\n}\r\n"],"names":["Card","props","onClick","text","more","image","alt","title","align","height","isPressable","isHoverable","onPress","variant","css","maxWidth","width","margin","display","flexDirection","src","objectFit","alignItems","className","textAlign","defaultProps","undefined","Section","forwardRef","ref","id","background","children","justifyContent","padding","minHeight","position","WhatIDo","languageState","useLanguage","texts","Title","flexWrap","Cards","map","item","i","body"],"sourceRoot":""}