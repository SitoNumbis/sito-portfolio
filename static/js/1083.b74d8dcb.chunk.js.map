{"version":3,"file":"static/js/1083.b74d8dcb.chunk.js","mappings":"yNAkBMA,GAASC,EAAAA,EAAAA,KAAS,kBAAM,qFAAN,IAClBC,GAAOD,EAAAA,EAAAA,KAAS,kBAAM,iEAAN,IAChBE,GAAOF,EAAAA,EAAAA,KAAS,kBAAM,8BAAN,IAwGtB,UAtGkB,SAACG,GACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,EAAyBH,EAAzBG,QAASC,EAAgBJ,EAAhBI,YAETC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAER,GAAoCE,EAAAA,EAAAA,UAAS,SAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACR,IAAQC,EAASV,EAATU,KACRF,EAAcE,EAAKC,OAASD,EAAOH,EACpC,GAAE,CAACP,KAGF,SAAC,EAAAY,SAAD,WACE,gBACEC,QAASV,EACTW,WAAWC,EAAAA,EAAAA,IAAI,CACbC,IAAK,EACLC,KAAM,EACNC,OAAQ,QACRC,SAAU,QACVC,MAAO,OACPC,cAAgBnB,EAAmB,OAAT,OAC1BoB,QAASpB,EAAU,EAAI,EACvBqB,WAAY,qBACZC,WAAY,cAXhB,UAcE,iBACEV,WAAWC,EAAAA,EAAAA,IAAI,CACbI,SAAU,WACVE,cAAe,OACfI,cAAe,SACfP,OAAQ,OACRE,MAAO,QACPM,UAAU,cAAD,OAAgBxB,EAAU,EAAI,SAA9B,KACTqB,WAAY,iBACZC,WAAY,UACZG,OAAQ,SAVZ,WAaE,SAAChC,EAAD,CACEiC,GAAG,eACH,aAAYxB,EAAcyB,MAAMC,WAAWC,YAC3CC,MAAI,EACJC,SAAO,EACPlB,IAAK,CACHmB,OAAQ,OACRd,MAAO,OACPe,SAAU,IACVhB,SAAU,WACViB,MAAO,OAETC,QAASlC,EAZX,UAcE,SAAC,IAAD,CAAiBmC,KAAMC,EAAAA,SAEzB,iBACEzB,WAAWC,EAAAA,EAAAA,IAAI,CACbyB,YAAa,OACbC,WAAY,OACZhB,cAAe,WAJnB,WAOE,SAAC3B,EAAD,CAAM4C,IAAE,EAAR,kBACCtC,EAAcyB,MAAMc,OAAOC,MAAMC,KAAI,SAACC,GAAD,OACpC,SAACjD,EAAD,CAAoBkD,KAAMD,EAAKE,GAA/B,UACE,SAACrD,EAAD,CACEiC,GAAIkB,EAAKE,GACT,aAAYF,EAAKE,GACjBhB,MAAI,EACJC,SAAO,EACPgB,MAAM,UAENZ,QAASlC,EACT+C,MAAOJ,EAAKE,KAAOzC,EACnBQ,IAAK,CACHmB,OAAQ,QACRiB,eAAgB,QAChBC,KAAM,CACJD,eAAgB,wBAChB/B,MAAO,SAdb,SAkBG0B,EAAKO,OAZDP,EAAKQ,QAPHR,EAAKE,GADoB,aA6BjD,C","sources":["components/OffCanvas/OffCanvas.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Suspense } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport loadable from \"@loadable/component\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @emotion/css\r\nimport { css } from \"@emotion/css\";\r\n\r\n// @fortawesome\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faClose } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// contexts\r\nimport { useLanguage } from \"../../contexts/LanguageProvider\";\r\n\r\n// @nextui-org\r\nconst Button = loadable(() => import(\"../../components/NextUI/Button\"));\r\nconst Link = loadable(() => import(\"../../components/NextUI/Link\"));\r\nconst Text = loadable(() => import(\"../../components/NextUI/Text\"));\r\n\r\nconst OffCanvas = (props) => {\r\n  const location = useLocation();\r\n  const { visible, handleClose } = props;\r\n\r\n  const { languageState } = useLanguage();\r\n\r\n  const [activeLink, setActiveLink] = useState(\"#hero\");\r\n\r\n  useEffect(() => {\r\n    const { hash } = location;\r\n    setActiveLink(hash.length ? hash : activeLink);\r\n  }, [location]);\r\n\r\n  return (\r\n    <Suspense>\r\n      <div\r\n        onClick={handleClose}\r\n        className={css({\r\n          top: 0,\r\n          left: 0,\r\n          height: \"100vh\",\r\n          position: \"fixed\",\r\n          width: \"100%\",\r\n          pointerEvents: !visible ? \"none\" : \"auto\",\r\n          opacity: visible ? 1 : 0,\r\n          transition: \"opacity 500ms ease\",\r\n          background: \"#222222ce\",\r\n        })}\r\n      >\r\n        <div\r\n          className={css({\r\n            position: \"relative\",\r\n            pointerEvents: \"auto\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n            width: \"300px\",\r\n            transform: `translateX(${visible ? 0 : \"-300px\"})`,\r\n            transition: \"all 500ms ease\",\r\n            background: \"#333444\",\r\n            zIndex: 999999,\r\n          })}\r\n        >\r\n          <Button\r\n            id=\"close-drawer\"\r\n            aria-label={languageState.texts.AriaLabels.closeDrawer}\r\n            flat\r\n            rounded\r\n            css={{\r\n              margin: \"10px\",\r\n              width: \"40px\",\r\n              minWidth: \"0\",\r\n              position: \"absolute\",\r\n              right: \"0px\",\r\n            }}\r\n            onPress={handleClose}\r\n          >\r\n            <FontAwesomeIcon icon={faClose} />\r\n          </Button>\r\n          <div\r\n            className={css({\r\n              paddingLeft: \"20px\",\r\n              paddingTop: \"40px\",\r\n              flexDirection: \"column\",\r\n            })}\r\n          >\r\n            <Text h3>Sito</Text>\r\n            {languageState.texts.Navbar.Links.map((item) => (\r\n              <Link key={item.to} href={item.to}>\r\n                <Button\r\n                  id={item.to}\r\n                  aria-label={item.to}\r\n                  flat\r\n                  rounded\r\n                  color=\"inherit\"\r\n                  key={item.Label}\r\n                  onPress={handleClose}\r\n                  light={item.to !== activeLink}\r\n                  css={{\r\n                    margin: \"5px 0\",\r\n                    justifyContent: \"start\",\r\n                    span: {\r\n                      justifyContent: \"flex-start !important\",\r\n                      width: \"100%\",\r\n                    },\r\n                  }}\r\n                >\r\n                  {item.label}\r\n                </Button>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nOffCanvas.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default OffCanvas;\r\n"],"names":["Button","loadable","Link","Text","props","location","useLocation","visible","handleClose","languageState","useLanguage","useState","activeLink","setActiveLink","useEffect","hash","length","Suspense","onClick","className","css","top","left","height","position","width","pointerEvents","opacity","transition","background","flexDirection","transform","zIndex","id","texts","AriaLabels","closeDrawer","flat","rounded","margin","minWidth","right","onPress","icon","faClose","paddingLeft","paddingTop","h3","Navbar","Links","map","item","href","to","color","light","justifyContent","span","label","Label"],"sourceRoot":""}